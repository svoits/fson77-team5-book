{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/render-support.js","src/js/support-list.js","node_modules/@parcel/runtime-js/lib/runtime-67c85cd4c255d346.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-3ca8ed6413f81b7a.js","node_modules/@parcel/runtime-js/lib/runtime-baf8cb0d90c324c5.js","node_modules/@parcel/runtime-js/lib/runtime-900519e33bdc1145.js","node_modules/@parcel/runtime-js/lib/runtime-f1e5695cb12586ab.js","node_modules/@parcel/runtime-js/lib/runtime-6de080ceb91b364b.js","node_modules/@parcel/runtime-js/lib/runtime-c8fa2bc3bf94f32d.js","node_modules/@parcel/runtime-js/lib/runtime-c44730e85edf7462.js","node_modules/@parcel/runtime-js/lib/runtime-097af4e25748df6c.js","node_modules/@parcel/runtime-js/lib/runtime-fe9d9feb7d814c65.js","node_modules/@parcel/runtime-js/lib/runtime-5989b2970fbb9199.js","node_modules/@parcel/runtime-js/lib/runtime-a68a7d10124f215f.js","node_modules/@parcel/runtime-js/lib/runtime-c1d860fe11244b59.js","node_modules/@parcel/runtime-js/lib/runtime-b8e26dd54d1dce03.js","node_modules/@parcel/runtime-js/lib/runtime-248027b3ae507b5e.js","node_modules/@parcel/runtime-js/lib/runtime-b57d2d5aa15ea260.js","node_modules/@parcel/runtime-js/lib/runtime-c8618cb69973f8f6.js","node_modules/@parcel/runtime-js/lib/runtime-e62e8eb02e6f8522.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/grid/grid.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","src/js/theme-toggle.js","node_modules/@parcel/runtime-js/lib/runtime-8ddf2b091461c4f9.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import { supportArr } from './support-list';\nimport Swiper from 'swiper';\n\nconst supportListEl = document.querySelector('.js-support-list');\nconst btnSwiperEl = document.querySelector('.swiper-button');\n\nbtnSwiperEl.addEventListener('click', () => {\n  swiper.slideNext();\n});\n\nlet position = 0;\nconst addLeadingZero = value => {\n  return String(value).padStart(2, '0');\n};\n\nconst markupCardFund = (\n  { title, url, img, img2x },\n  position\n) => `<li class=\"support-list-item swiper-slide\">\n  <p class=\"support-number\">${position}</p>\n  <a class=\"support-link\" href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">\n    <img\n    srcset=\"${img} 1x, ${img2x} 2x\"\n      src=\"${img}\"\n      alt=\"${title}\"\n      width=\"149\"\n      loading=\"lazy\"\n    />\n  </a>\n</li>`;\n\nconst markupSetFunds = supportArr\n  .map((el, i) => {\n    position = addLeadingZero(i + 1);\n\n    return markupCardFund(el, position);\n  })\n  .join('');\n\nsupportListEl.innerHTML = markupSetFunds;\n\nconst swiper = new Swiper('.my-swiper', {\n  direction: 'vertical',\n  spaceBetween: 20,\n  slidesPerView: 'auto',\n  // loop: true,\n  rewind: true,\n\n  navigation: {\n    nextEl: '.swiper-button',\n  },\n\n  plugins: {\n    scrollContainer: true,\n  },\n});\n\nswiper.update();\n","import actionAgainstHunger from '../images/support-ukraine/against-hunger.png';\nimport actionAgainstHunger_2x from '../images/support-ukraine/against-hunger@2x.png';\nimport internationalMedicalCorps from '../images/support-ukraine/international-corps.png';\nimport internationalMedicalCorps_2x from '../images/support-ukraine/international-corps@2x.png';\nimport medicinsSansFrontieres from '../images/support-ukraine/medecins-sans.png';\nimport medicinsSansFrontieres_2x from '../images/support-ukraine/medecins-sans@2x.png';\nimport projectHope from '../images/support-ukraine/project-hope.png';\nimport projectHope_2x from '../images/support-ukraine/project-hope@2x.png';\nimport razom from '../images/support-ukraine/razom.png';\nimport razom_2x from '../images/support-ukraine/razom@2x.png';\nimport saveTheChildren from '../images/support-ukraine/save-the-children.png';\nimport saveTheChildren_2x from '../images/support-ukraine/save-the-children@2x.png';\nimport serhiyPrytulaFoundation from '../images/support-ukraine/prytula.png';\nimport serhiyPrytulaFoundation_2x from '../images/support-ukraine/prytula@2x.png';\nimport united24 from '../images/support-ukraine/united24.png';\nimport united24_2x from '../images/support-ukraine/united24@2x.png';\nimport worldVision from '../images/support-ukraine/world-vision.png';\nimport worldVision_2x from '../images/support-ukraine/world-vision@2x.png';\n\nexport const supportArr = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: saveTheChildren,\n    img2x: saveTheChildren_2x,\n  },\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: projectHope,\n    img2x: projectHope_2x,\n  },\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: united24,\n    img2x: united24_2x,\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: internationalMedicalCorps,\n    img2x: internationalMedicalCorps_2x,\n  },\n  {\n    title: 'Medecins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: medicinsSansFrontieres,\n    img2x: medicinsSansFrontieres_2x,\n  },\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: razom,\n    img2x: razom_2x,\n  },\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: actionAgainstHunger,\n    img2x: actionAgainstHunger_2x,\n  },\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: worldVision,\n    img2x: worldVision_2x,\n  },\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: serhiyPrytulaFoundation,\n    img2x: serhiyPrytulaFoundation_2x,\n  },\n];\n","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"eF3F0\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"l7DZE\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"6YcB3\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"1gnSe\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"8tMyc\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"bhwL6\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"k2QCw\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"iTNiB\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"bq97V\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"i4DRg\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"eowje\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"4WMYX\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"2Ww0o\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"kyyVE\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"3pzU3\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"4FzM5\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"fdDmm\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"455qO\");","/**\n * Swiper 9.3.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: May 10, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    if (swiper.isElement) {\n      swiper.el.shadowEl.append(liveRegion);\n    } else {\n      swiper.el.append(liveRegion);\n    }\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      console.log(newIndex);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","export default function Grid({\n  swiper,\n  extendParams\n}) {\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column'\n    }\n  });\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n  const getSpaceBetween = () => {\n    let spaceBetween = swiper.params.spaceBetween;\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n    } else if (typeof spaceBetween === 'string') {\n      spaceBetween = parseFloat(spaceBetween);\n    }\n    return spaceBetween;\n  };\n  const initSlides = slidesLength => {\n    const {\n      slidesPerView\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    slidesPerRow = slidesNumberEvenToRows / rows;\n    numFullColumns = Math.floor(slidesLength / rows);\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n  };\n  const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n    const {\n      slidesPerGroup\n    } = swiper.params;\n    const spaceBetween = getSpaceBetween();\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    // Set slides order\n    let newSlideOrderIndex;\n    let column;\n    let row;\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n      newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n      slide.style.order = newSlideOrderIndex;\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n      if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n        row += 1;\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n    slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\n  };\n  const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n    const {\n      centeredSlides,\n      roundLengths\n    } = swiper.params;\n    const spaceBetween = getSpaceBetween();\n    const {\n      rows\n    } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n    if (centeredSlides) {\n      const newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid.splice(0, snapGrid.length);\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n  swiper.grid = {\n    initSlides,\n    updateSlide,\n    updateWrapperSize\n  };\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","const checkBoxEl = document.querySelector('.js-theme-toggle');\nconst body = document.querySelector('body');\n\nconst STORAGE_KEY = 'theme';\nconst theme = {\n  LIGHT: 'light-theme',\n  DARK: 'dark-theme',\n};\n\ncheckBoxEl.addEventListener('click', onCheckBoxClick);\n\nexport default function onCheckBoxClick(e) {\n  let themeValue = '';\n  if (e.currentTarget.checked) {\n    themeValue = theme.DARK;\n    body.classList.add(themeValue);\n  } else {\n    themeValue = theme.LIGHT;\n    body.classList.remove(theme.DARK);\n  }\n  localStorage.setItem(STORAGE_KEY, themeValue);\n}\n\nfunction savedThemeOnPageReload() {\n  const savedTheme = localStorage.getItem(STORAGE_KEY);\n\n  if (savedTheme === theme.DARK) {\n    body.classList.add(savedTheme);\n    checkBoxEl.setAttribute('checked', true);\n  }\n}\n\nsavedThemeOnPageReload();\n","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"cfiU8\\\":\\\"index.a33f2e2e.js\\\",\\\"eF3F0\\\":\\\"against-hunger.ec8ff215.png\\\",\\\"l7DZE\\\":\\\"against-hunger@2x.5c94354c.png\\\",\\\"6YcB3\\\":\\\"international-corps.34ad2679.png\\\",\\\"1gnSe\\\":\\\"international-corps@2x.9ba552ee.png\\\",\\\"8tMyc\\\":\\\"medecins-sans.b22aa920.png\\\",\\\"bhwL6\\\":\\\"medecins-sans@2x.ce844aaa.png\\\",\\\"k2QCw\\\":\\\"project-hope.e88d1ef9.png\\\",\\\"iTNiB\\\":\\\"project-hope@2x.d842cf55.png\\\",\\\"bq97V\\\":\\\"razom.d10c3ccf.png\\\",\\\"i4DRg\\\":\\\"razom@2x.e45e5cbf.png\\\",\\\"eowje\\\":\\\"save-the-children.c3fa62c8.png\\\",\\\"4WMYX\\\":\\\"save-the-children@2x.2784c865.png\\\",\\\"2Ww0o\\\":\\\"prytula.3b794e95.png\\\",\\\"kyyVE\\\":\\\"prytula@2x.2bec78c7.png\\\",\\\"3pzU3\\\":\\\"united24.8dc84a08.png\\\",\\\"4FzM5\\\":\\\"united24@2x.361632f2.png\\\",\\\"fdDmm\\\":\\\"world-vision.faf57da6.png\\\",\\\"455qO\\\":\\\"world-vision@2x.01a3e391.png\\\"}\"));"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$axqiF","parcelRequire","$f2f17242ff4310e4$var$supportListEl","document","querySelector","addEventListener","$f2f17242ff4310e4$var$swiper","slideNext","$f2f17242ff4310e4$var$position","$f2f17242ff4310e4$var$markupSetFunds","supportArr","map","el","param","position1","title","url","img","img2x","String","padStart","concat","join","innerHTML","$2pSj8","default","direction","spaceBetween","slidesPerView","rewind","navigation","nextEl","plugins","scrollContainer","update","$8SyQA","$7ac16313eec5804a$export$f4aa3b238a0d4079","$parcel$interopDefault","$bgiPc","$4MZi7","$g5GEa","$fYMhL","$7QtXU","$7wAKM","$bI3JL","$joLX2","$45rg4","$ZL6vX","$4DWj1","$lYrWP","$lvJU1","$hWGoM","$8Vkho","$7GrZi","$3WJkl","module","exports","getBundleURL","resolve","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","replace","value","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","$8MBJY","$1c280aeb2839a22d$var$prototypes","eventsEmitter","$3lgo1","$42aG2","translate","$lUFJw","transition","$59lEw","slide","$itDrZ","loop","$aSak5","grabCursor","$61axM","events","$lrPYL","breakpoints","$lWyhG","checkOverflow","$h5TWE","classes","$9Vwwo","$1c280aeb2839a22d$var$extendedDefaults","$1c280aeb2839a22d$var$Swiper","Swiper","_len","arguments","args","Array","_key","_modules","params","constructor","prototype","toString","call","slice","ref","$1EjTE","extend","$58sFY","getDocument","querySelectorAll","swipers","forEach","containerEl","newParams","push","swiper","this","__swiper__","support","$ledMJ","getSupport","device","$4rC3V","getDevice","userAgent","browser","$lhE85","getBrowser","eventsListeners","eventsAnyListeners","modules","$8nrFW","__modules__","isArray","apply","allModulesParams","mod","extendParams","$6gDqh","on","bind","once","off","emit","swiperParams","$959nv","originalParams","passedParams","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","isVertical","activeIndex","realIndex","isBeginning","isEnd","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","Math","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","undefined","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","key","slideEl","slidesEl","elementChildren","slideClass","firstSlideIndex","elementIndex","index","getSlideIndex","filter","getAttribute","setGrabCursor","unsetGrabCursor","speed","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","_emitClasses","cls","className","split","indexOf","containerModifierClass","destroyed","updates","getSlideClasses","view","exact","swiperSize","size","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","i1","i2","slideInView","i3","slideInView1","translated","setBreakpoint","imageEl","complete","$7eaCI","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","setTranslate","autoHeight","updateAutoHeight","virtual","slideTo","watchOverflow","translateValue","rtlTranslate","newTranslate","newDirection","needUpdate","currentDirection","classList","remove","add","emitContainerClasses","style","width","height","rtl","dir","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","mount","addClasses","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","e","target","preload","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","newDefaults","m","installModule","prototypeGroup","protoMethod","use","$hoK65","$5NIfu","$1c280aeb2839a22d$export$2e2bcd8739ae039","defineProperty","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","arr","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","obj","__esModule","iter","Symbol","iterator","from","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","name","test","len","arr2","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$f215c72f040a88cf$var$_arrayLikeToArray","$3bd3f193ccd5630c$var$isObject","$3bd3f193ccd5630c$export$8b58be045bf06082","src","$3bd3f193ccd5630c$export$3fdcb9b4d81368d8","body","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","$3bd3f193ccd5630c$export$f65ca476c09acec0","doc","$3bd3f193ccd5630c$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","$3bd3f193ccd5630c$export$38b2d434cce3ea22","win","window","$hKHmD","$1338f5f0d60fe216$export$8694e5c03a4df8e6","object","e1","$1338f5f0d60fe216$export$bdd553fddd433dcb","delay","$1338f5f0d60fe216$export$461939dd4422153","now","$1338f5f0d60fe216$export$3735103072e4a80","getWindow","currentStyle","$1338f5f0d60fe216$export$5ec402b7fcf74398","matrix","curTransform","transformMatrix","axis","curStyle","WebKitCSSMatrix","transform","webkitTransform","a","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$1338f5f0d60fe216$export$a6cdc56e425d0d0a","$1338f5f0d60fe216$var$isNode","node","HTMLElement","nodeType","$1338f5f0d60fe216$export$8b58be045bf06082","nextSource","keysArray","noExtend","nextIndex","nextKey","desc","getOwnPropertyDescriptor","to","_loop","$1338f5f0d60fe216$export$a607267f322101fd","varName","varValue","setProperty","$1338f5f0d60fe216$export$a5dd2b4b1a116d6d","time","targetPosition","side","startPosition","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$1338f5f0d60fe216$export$616841b86f802685","$1338f5f0d60fe216$export$eb846d859f2895e6","selector","$1338f5f0d60fe216$export$c8a8987d4410bf2d","tag","_classList","$1338f5f0d60fe216$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$1338f5f0d60fe216$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$1338f5f0d60fe216$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$1338f5f0d60fe216$export$4184470d4bd0f986","prop","$1338f5f0d60fe216$export$371885c503a01623","child","previousSibling","$1338f5f0d60fe216$export$aedc7b608ca8e855","parents","parent","parentElement","$1338f5f0d60fe216$export$6b974c5889da0bb5","fireCallBack","$1338f5f0d60fe216$export$863f37913038cf77","includeMargins","offsetWidth","$f745992e8d1b1180$var$support","$f745992e8d1b1180$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$f745992e8d1b1180$var$calcSupport","$33c7356d035118c5$var$deviceCached","$33c7356d035118c5$var$calcDevice","platform","ua","ios","android","screenWidth","screenHeight","ipad","ipod","iphone","windows","macos","iPadScreens","os","$33c7356d035118c5$export$30c823bc834d6ab4","overrides","$f7ea505fdac53fb2$var$browser","$1t1Wn","$f7ea505fdac53fb2$export$89e15fc796a4a429","needPerspectiveFix","isSafari","ua1","includes","num","Number","major","minor","isWebView","$f7ea505fdac53fb2$var$calcBrowser","$caa86f81f75e9730$export$2e2bcd8739ae039","param1","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$4393da3adccaa7db$export$2e2bcd8739ae039","observers","attach","options","ObserverFunc","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$26f00b4681ced12e$export$2e2bcd8739ae039","handler","priority","self","method","event","onceHandler","__emitterProxy","offAny","eventHandler","data","context","unshift","eventsArray","$gXfEI","$2effa18fdcd4ebca$export$2e2bcd8739ae039","$fdMLQ","$56ZNO","updateSlidesOffset","$hIP6N","updateSlidesProgress","$dW6z4","$5P2Nk","$1kvfj","$KG4bf","updateClickedSlide","$9VeMF","$c57e4cf0a3cc0e9b$export$2e2bcd8739ae039","clientWidth","clientHeight","parseInt","isNaN","$b14de6c650ce395b$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","key1","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesSize1","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","backFaceHiddenClass","hasClassBackfaceClassAdded","contains","maxBackfaceHiddenSlides","$3b8d73f2acfa0ea0$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","index1","offsetHeight","$ce6e30db971b8f6a$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$a255c8b825922753$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","isVisible","originalProgress","$43d3e22542fd4c38$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","$0f7fe5860e74601f$export$2e2bcd8739ae039","activeSlide","getFilteredSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","emitSlidesClasses","$08c4ed821325a44e$export$2e2bcd8739ae039","newActiveIndex","realIndex1","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$08c4ed821325a44e$export$81ecffcda7ad6ebb","skip","$543214d309191af3$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$543214d309191af3$var$unlazy","$543214d309191af3$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slidesPerViewDynamic","slideIndexLastInView","$7394e7bbbcd710e0$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1vNo4","$ff3f3346f9416381$export$2e2bcd8739ae039","getTranslate","$kCYKF","$7THKu","$dzDR0","$dVcfr","$119efefc5c17e954$export$2e2bcd8739ae039","virtualTranslate","$f0467b48c9fa9010$export$2e2bcd8739ae039","byController","x","y","$5bff9b105f3a15ca$export$2e2bcd8739ae039","$9e1d7562301634ad$export$2e2bcd8739ae039","$a22a1974ce4a087e$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","_obj","onTranslateToWrapperTransitionEnd","$kR0Vg","$3bfe96c57afe6ca0$export$2e2bcd8739ae039","transitionStart","$488q8","transitionEnd","$99Zle","$f2e9791e5099a2fd$export$2e2bcd8739ae039","transitionDuration","$4aOW6","$301e70f0ee5514cd$export$2e2bcd8739ae039","step","$309f9b76d4fd47ea$export$2e2bcd8739ae039","$6ab48978240ea54a$export$2e2bcd8739ae039","$OZIeq","$d7398976190fd90b$export$2e2bcd8739ae039","slideToLoop","$cGTS6","$7Y909","slidePrev","$3B7dt","slideReset","$dhKLJ","slideToClosest","$fn7l8","$hk5na","$09948a6d2dc2571f$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$93d4bf3a931cd83e$export$2e2bcd8739ae039","indexAsNumber","newIndex","$5cd51e7a21111153$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$29ea6cd54fa440bc$export$2e2bcd8739ae039","normalize","val","prevSnapIndex","normalizedSnapGrid","prevSnap","prevIndex","lastIndex","$9ac1243abd623ac0$export$2e2bcd8739ae039","$b30eb28584e91039$export$2e2bcd8739ae039","threshold","currentSnap","nextSnap","currentSnap1","$c9c878d368de6346$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$3Gh7G","$7ea6f47a36945eb6$export$2e2bcd8739ae039","$7AnfI","$5gsL1","$2ae2939469a141d4$export$2e2bcd8739ae039","slideRealIndex","$585deea5b955cef7$export$2e2bcd8739ae039","_slideTo","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","swiperLoopMoveDOM","prepend","recalcSlides","currentSlideTranslate","newSlideTranslate","currentSlideTranslate1","newSlideTranslate1","diff1","controller","control","loopParams","c","$3d54c101ba970f47$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$3mSh2","$012177cdd3ce0659$export$2e2bcd8739ae039","$aozqy","$273d86d6596c268d$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$7917a06587c5c882$export$2e2bcd8739ae039","$f9d4708c1dfbfc0b$var$dummyEventAttached","$f9d4708c1dfbfc0b$var$dummyEventListener","$f9d4708c1dfbfc0b$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$kXZZT","onLoad","$f9d4708c1dfbfc0b$export$2e2bcd8739ae039","$97DRT","$ex2Z8","$1OTa3","$19FtL","$35dR0","$1jcRQ","$6a43b17d59f348c6$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","__closestFrom","assignedSlot","found","getRootNode","$6a43b17d59f348c6$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$02baf1653270db8e$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","pow","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","loopFixed","isLoop","evt","bubbles","dispatchEvent","disableParentSwiper","resistanceRatio","resistance","followFinger","$15353fd53fa0afb1$export$2e2bcd8739ae039","type","currentPos","touchEndTime","timeDiff","pathTree","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","increment1","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","prevEl","$f43968ae768025a8$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$23ec95d99b99a94a$export$2e2bcd8739ae039","stopImmediatePropagation","$0d76ce9bb77be3f2$export$2e2bcd8739ae039","$0f418bff419545b4$export$2e2bcd8739ae039","$bGu4B","$ff999bdc5ea561ff$export$2e2bcd8739ae039","getBreakpoint","$7ogML","$881af1db6e44c2b5$var$isGridEnabled","$881af1db6e44c2b5$export$2e2bcd8739ae039","breakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","$5617cb898a0f8fe0$export$2e2bcd8739ae039","base","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","_i","point1","value1","$g0Bml","$73a2aa00ea89ae97$export$2e2bcd8739ae039","$8Ubu7","$ba79a0353521e453$export$2e2bcd8739ae039","_classNames","prefix","resultClasses","suffixes","autoheight","centered","item","$67bc7655f50fd7fe$export$2e2bcd8739ae039","$c71e4cd26750bb38$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$69cbdaf801d551aa$export$2e2bcd8739ae039","uniqueNavElements","passiveListeners","$4902d140bb7ee8d5$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$f468fb17181f9684$export$2e2bcd8739ae039","checkProps","$73166865f7b54cd7$export$2e2bcd8739ae039","$f4c91b3b7f316ab7$export$2e2bcd8739ae039","appendElement","tempDOM","$2813cfd83c41305e$export$2e2bcd8739ae039","prependElement","$18636735d4558718$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$716dd64e8af94877$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$09cd9ab98ba19d8c$export$2e2bcd8739ae039","removeSlide","$972bb72b4792baa3$export$2e2bcd8739ae039","requireUpdateOnVirtual","overwriteParams","perspective","recreateShadows","getEffectParams","overwriteParamsResult","_s","slideShadows","$a3fe64242580cf29$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$32bf8419d687a016$export$2e2bcd8739ae039","transformElements","allSlides","eventTriggered","parentNode","getSlide","elementTransitionEnd","$aa588c71d5569b8d$export$2e2bcd8739ae039","shadowClass","shadowContainer","savedTheme","$4b360ea48ce96d8f$var$checkBoxEl","$4b360ea48ce96d8f$var$body","$4b360ea48ce96d8f$var$STORAGE_KEY","$4b360ea48ce96d8f$var$theme","themeValue","currentTarget","checked","localStorage","setItem","getItem","register","JSON","parse"],"version":3,"file":"index.a33f2e2e.js.map"}