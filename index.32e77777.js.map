{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/header.js","src/js/mobile-menu.js","src/js/render-support.js","src/js/support-list.js","node_modules/@parcel/runtime-js/lib/runtime-67c85cd4c255d346.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-3ca8ed6413f81b7a.js","node_modules/@parcel/runtime-js/lib/runtime-baf8cb0d90c324c5.js","node_modules/@parcel/runtime-js/lib/runtime-900519e33bdc1145.js","node_modules/@parcel/runtime-js/lib/runtime-f1e5695cb12586ab.js","node_modules/@parcel/runtime-js/lib/runtime-6de080ceb91b364b.js","node_modules/@parcel/runtime-js/lib/runtime-c8fa2bc3bf94f32d.js","node_modules/@parcel/runtime-js/lib/runtime-c44730e85edf7462.js","node_modules/@parcel/runtime-js/lib/runtime-097af4e25748df6c.js","node_modules/@parcel/runtime-js/lib/runtime-fe9d9feb7d814c65.js","node_modules/@parcel/runtime-js/lib/runtime-5989b2970fbb9199.js","node_modules/@parcel/runtime-js/lib/runtime-a68a7d10124f215f.js","node_modules/@parcel/runtime-js/lib/runtime-c1d860fe11244b59.js","node_modules/@parcel/runtime-js/lib/runtime-b8e26dd54d1dce03.js","node_modules/@parcel/runtime-js/lib/runtime-248027b3ae507b5e.js","node_modules/@parcel/runtime-js/lib/runtime-b57d2d5aa15ea260.js","node_modules/@parcel/runtime-js/lib/runtime-c8618cb69973f8f6.js","node_modules/@parcel/runtime-js/lib/runtime-e62e8eb02e6f8522.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/grid/grid.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","src/js/theme-toggle.js","node_modules/@parcel/runtime-js/lib/runtime-8ddf2b091461c4f9.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","import './mobile-menu';\n","// import { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\n\n(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n\n    // const scrollLockMethod = !isMenuOpen ? disableBodyScroll : enableBodyScroll;\n    scrollLockMethod(document.body);\n  };\n\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();\n","import { supportArr } from './support-list';\nimport Swiper from 'swiper';\n\nconst supportListEl = document.querySelector('.js-support-list');\nconst btnSwiperEl = document.querySelector('.swiper-button');\n\nbtnSwiperEl.addEventListener('click', () => {\n  swiper.slideNext();\n});\n\nlet position = 0;\nconst addLeadingZero = value => {\n  return String(value).padStart(2, '0');\n};\n\nconst markupCardFund = (\n  { title, url, img, img2x },\n  position\n) => `<li class=\"support-list-item swiper-slide\">\n  <p class=\"support-number\">${position}</p>\n  <a class=\"support-link\" href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">\n    <img\n    srcset=\"${img} 1x, ${img2x} 2x\"\n      src=\"${img}\"\n      alt=\"${title}\"\n      width=\"149\"\n      loading=\"lazy\"\n    />\n  </a>\n</li>`;\n\nconst markupSetFunds = supportArr\n  .map((el, i) => {\n    position = addLeadingZero(i + 1);\n\n    return markupCardFund(el, position);\n  })\n  .join('');\n\nsupportListEl.innerHTML = markupSetFunds;\n\nconst swiper = new Swiper('.my-swiper', {\n  direction: 'vertical',\n  spaceBetween: 20,\n  slidesPerView: 'auto',\n  // loop: true,\n  rewind: true,\n\n  navigation: {\n    nextEl: '.swiper-button',\n  },\n\n  plugins: {\n    scrollContainer: true,\n  },\n});\n\nswiper.update();\n","import actionAgainstHunger from '../images/support-ukraine/against-hunger.png';\nimport actionAgainstHunger_2x from '../images/support-ukraine/against-hunger@2x.png';\nimport internationalMedicalCorps from '../images/support-ukraine/international-corps.png';\nimport internationalMedicalCorps_2x from '../images/support-ukraine/international-corps@2x.png';\nimport medicinsSansFrontieres from '../images/support-ukraine/medecins-sans.png';\nimport medicinsSansFrontieres_2x from '../images/support-ukraine/medecins-sans@2x.png';\nimport projectHope from '../images/support-ukraine/project-hope.png';\nimport projectHope_2x from '../images/support-ukraine/project-hope@2x.png';\nimport razom from '../images/support-ukraine/razom.png';\nimport razom_2x from '../images/support-ukraine/razom@2x.png';\nimport saveTheChildren from '../images/support-ukraine/save-the-children.png';\nimport saveTheChildren_2x from '../images/support-ukraine/save-the-children@2x.png';\nimport serhiyPrytulaFoundation from '../images/support-ukraine/prytula.png';\nimport serhiyPrytulaFoundation_2x from '../images/support-ukraine/prytula@2x.png';\nimport united24 from '../images/support-ukraine/united24.png';\nimport united24_2x from '../images/support-ukraine/united24@2x.png';\nimport worldVision from '../images/support-ukraine/world-vision.png';\nimport worldVision_2x from '../images/support-ukraine/world-vision@2x.png';\n\nexport const supportArr = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: saveTheChildren,\n    img2x: saveTheChildren_2x,\n  },\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: projectHope,\n    img2x: projectHope_2x,\n  },\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: united24,\n    img2x: united24_2x,\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: internationalMedicalCorps,\n    img2x: internationalMedicalCorps_2x,\n  },\n  {\n    title: 'Medecins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: medicinsSansFrontieres,\n    img2x: medicinsSansFrontieres_2x,\n  },\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: razom,\n    img2x: razom_2x,\n  },\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: actionAgainstHunger,\n    img2x: actionAgainstHunger_2x,\n  },\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: worldVision,\n    img2x: worldVision_2x,\n  },\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: serhiyPrytulaFoundation,\n    img2x: serhiyPrytulaFoundation_2x,\n  },\n];\n","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"eF3F0\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"l7DZE\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"6YcB3\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"1gnSe\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"8tMyc\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"bhwL6\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"k2QCw\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"iTNiB\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"bq97V\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"i4DRg\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"eowje\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"4WMYX\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"2Ww0o\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"kyyVE\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"3pzU3\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"4FzM5\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"fdDmm\");","module.exports = require('./helpers/bundle-url').getBundleURL('cfiU8') + require('./helpers/bundle-manifest').resolve(\"455qO\");","/**\n * Swiper 9.3.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: May 10, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (spaceBetween || 0);\n    });\n    allSlidesSize -= spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  let spaceBetween = params.spaceBetween;\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n  } else if (typeof spaceBetween === 'string') {\n    spaceBetween = parseFloat(spaceBetween);\n  }\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.prepend(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      swiper.slides[index].swiperLoopMoveDOM = true;\n      slidesEl.append(swiper.slides[index]);\n      swiper.slides[index].swiperLoopMoveDOM = false;\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    if (swiper.isElement) {\n      swiper.el.shadowEl.append(liveRegion);\n    } else {\n      swiper.el.append(liveRegion);\n    }\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      console.log(newIndex);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","export default function Grid({\n  swiper,\n  extendParams\n}) {\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column'\n    }\n  });\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n  const getSpaceBetween = () => {\n    let spaceBetween = swiper.params.spaceBetween;\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiper.size;\n    } else if (typeof spaceBetween === 'string') {\n      spaceBetween = parseFloat(spaceBetween);\n    }\n    return spaceBetween;\n  };\n  const initSlides = slidesLength => {\n    const {\n      slidesPerView\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    slidesPerRow = slidesNumberEvenToRows / rows;\n    numFullColumns = Math.floor(slidesLength / rows);\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n  };\n  const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n    const {\n      slidesPerGroup\n    } = swiper.params;\n    const spaceBetween = getSpaceBetween();\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    // Set slides order\n    let newSlideOrderIndex;\n    let column;\n    let row;\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n      newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n      slide.style.order = newSlideOrderIndex;\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n      if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n        row += 1;\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n    slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\n  };\n  const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n    const {\n      centeredSlides,\n      roundLengths\n    } = swiper.params;\n    const spaceBetween = getSpaceBetween();\n    const {\n      rows\n    } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n    if (centeredSlides) {\n      const newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid.splice(0, snapGrid.length);\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n  swiper.grid = {\n    initSlides,\n    updateSlide,\n    updateWrapperSize\n  };\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","const checkBoxEl = document.querySelector('.js-theme-toggle');\nconst body = document.querySelector('body');\n\nconst STORAGE_KEY = 'theme';\nconst theme = {\n  LIGHT: 'light-theme',\n  DARK: 'dark-theme',\n};\n\ncheckBoxEl.addEventListener('click', onCheckBoxClick);\n\nexport default function onCheckBoxClick(e) {\n  let themeValue = '';\n  if (e.currentTarget.checked) {\n    themeValue = theme.DARK;\n    body.classList.add(themeValue);\n  } else {\n    themeValue = theme.LIGHT;\n    body.classList.remove(theme.DARK);\n  }\n  localStorage.setItem(STORAGE_KEY, themeValue);\n}\n\nfunction savedThemeOnPageReload() {\n  const savedTheme = localStorage.getItem(STORAGE_KEY);\n\n  if (savedTheme === theme.DARK) {\n    body.classList.add(savedTheme);\n    checkBoxEl.setAttribute('checked', true);\n  }\n}\n\nsavedThemeOnPageReload();\n","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"cfiU8\\\":\\\"index.32e77777.js\\\",\\\"eF3F0\\\":\\\"against-hunger.ec8ff215.png\\\",\\\"l7DZE\\\":\\\"against-hunger@2x.5c94354c.png\\\",\\\"6YcB3\\\":\\\"international-corps.34ad2679.png\\\",\\\"1gnSe\\\":\\\"international-corps@2x.9ba552ee.png\\\",\\\"8tMyc\\\":\\\"medecins-sans.b22aa920.png\\\",\\\"bhwL6\\\":\\\"medecins-sans@2x.ce844aaa.png\\\",\\\"k2QCw\\\":\\\"project-hope.e88d1ef9.png\\\",\\\"iTNiB\\\":\\\"project-hope@2x.d842cf55.png\\\",\\\"bq97V\\\":\\\"razom.d10c3ccf.png\\\",\\\"i4DRg\\\":\\\"razom@2x.e45e5cbf.png\\\",\\\"eowje\\\":\\\"save-the-children.c3fa62c8.png\\\",\\\"4WMYX\\\":\\\"save-the-children@2x.2784c865.png\\\",\\\"2Ww0o\\\":\\\"prytula.3b794e95.png\\\",\\\"kyyVE\\\":\\\"prytula@2x.2bec78c7.png\\\",\\\"3pzU3\\\":\\\"united24.8dc84a08.png\\\",\\\"4FzM5\\\":\\\"united24@2x.361632f2.png\\\",\\\"fdDmm\\\":\\\"world-vision.faf57da6.png\\\",\\\"455qO\\\":\\\"world-vision@2x.01a3e391.png\\\"}\"));"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","mobileMenu","openMenuBtn","closeMenuBtn","toggleMenu","document","querySelector","isMenuOpen","getAttribute","setAttribute","classList","toggle","scrollLockMethod","body","addEventListener","window","matchMedia","e","matches","remove","bodyScrollLock","enableBodyScroll","$axqiF","$f2f17242ff4310e4$var$supportListEl","$f2f17242ff4310e4$var$swiper","slideNext","$f2f17242ff4310e4$var$position","$f2f17242ff4310e4$var$markupSetFunds","supportArr","map","el","param","position1","title","url","img","img2x","String","padStart","concat","join","innerHTML","$2pSj8","default","direction","spaceBetween","slidesPerView","rewind","navigation","nextEl","plugins","scrollContainer","update","$8SyQA","$7ac16313eec5804a$export$f4aa3b238a0d4079","$parcel$interopDefault","$bgiPc","$4MZi7","$g5GEa","$fYMhL","$7QtXU","$7wAKM","$bI3JL","$joLX2","$45rg4","$ZL6vX","$4DWj1","$lYrWP","$lvJU1","$hWGoM","$8Vkho","$7GrZi","$3WJkl","module","exports","getBundleURL","resolve","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","replace","value","err","stack","match","$7dd1ddf6834435ca$var$getBundleURL","$8MBJY","$1c280aeb2839a22d$var$prototypes","eventsEmitter","$3lgo1","$42aG2","translate","$lUFJw","transition","$59lEw","slide","$itDrZ","loop","$aSak5","grabCursor","$61axM","events","$lrPYL","breakpoints","$lWyhG","checkOverflow","$h5TWE","classes","$9Vwwo","$1c280aeb2839a22d$var$extendedDefaults","$1c280aeb2839a22d$var$Swiper","Swiper","_len","arguments","args","Array","_key","_modules","params","constructor","prototype","toString","call","slice","ref","$1EjTE","extend","$58sFY","getDocument","querySelectorAll","swipers","forEach","containerEl","newParams","push","swiper","this","__swiper__","support","$ledMJ","getSupport","device","$4rC3V","getDevice","userAgent","browser","$lhE85","getBrowser","eventsListeners","eventsAnyListeners","modules","$8nrFW","__modules__","isArray","apply","allModulesParams","mod","extendParams","$6gDqh","on","bind","once","off","emit","swiperParams","$959nv","originalParams","passedParams","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","isVertical","activeIndex","realIndex","isBeginning","isEnd","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","Math","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","undefined","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","key","slideEl","slidesEl","elementChildren","slideClass","firstSlideIndex","elementIndex","index","getSlideIndex","filter","setGrabCursor","unsetGrabCursor","speed","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","_emitClasses","cls","className","split","indexOf","containerModifierClass","destroyed","updates","getSlideClasses","view","exact","swiperSize","size","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","i1","i2","slideInView","i3","slideInView1","translated","setBreakpoint","imageEl","complete","$7eaCI","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","setTranslate","autoHeight","updateAutoHeight","virtual","slideTo","watchOverflow","translateValue","rtlTranslate","newTranslate","newDirection","needUpdate","currentDirection","add","emitContainerClasses","style","width","height","rtl","dir","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","mount","addClasses","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","target","preload","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","newDefaults","m","installModule","prototypeGroup","protoMethod","use","$hoK65","$5NIfu","$1c280aeb2839a22d$export$2e2bcd8739ae039","defineProperty","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","arr","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","obj","__esModule","iter","Symbol","iterator","from","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","name","test","len","arr2","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$f215c72f040a88cf$var$_arrayLikeToArray","$3bd3f193ccd5630c$var$isObject","$3bd3f193ccd5630c$export$8b58be045bf06082","src","$3bd3f193ccd5630c$export$3fdcb9b4d81368d8","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","$3bd3f193ccd5630c$export$f65ca476c09acec0","doc","$3bd3f193ccd5630c$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","requestAnimationFrame","callback","cancelAnimationFrame","$3bd3f193ccd5630c$export$38b2d434cce3ea22","win","$hKHmD","$1338f5f0d60fe216$export$8694e5c03a4df8e6","object","e1","$1338f5f0d60fe216$export$bdd553fddd433dcb","delay","$1338f5f0d60fe216$export$461939dd4422153","now","$1338f5f0d60fe216$export$3735103072e4a80","getWindow","currentStyle","$1338f5f0d60fe216$export$5ec402b7fcf74398","matrix","curTransform","transformMatrix","axis","curStyle","WebKitCSSMatrix","transform","webkitTransform","a","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$1338f5f0d60fe216$export$a6cdc56e425d0d0a","$1338f5f0d60fe216$var$isNode","node","HTMLElement","nodeType","$1338f5f0d60fe216$export$8b58be045bf06082","nextSource","keysArray","noExtend","nextIndex","nextKey","desc","getOwnPropertyDescriptor","to","_loop","$1338f5f0d60fe216$export$a607267f322101fd","varName","varValue","setProperty","$1338f5f0d60fe216$export$a5dd2b4b1a116d6d","time","targetPosition","side","startPosition","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$1338f5f0d60fe216$export$616841b86f802685","$1338f5f0d60fe216$export$eb846d859f2895e6","selector","$1338f5f0d60fe216$export$c8a8987d4410bf2d","tag","_classList","$1338f5f0d60fe216$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$1338f5f0d60fe216$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$1338f5f0d60fe216$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$1338f5f0d60fe216$export$4184470d4bd0f986","prop","$1338f5f0d60fe216$export$371885c503a01623","child","previousSibling","$1338f5f0d60fe216$export$aedc7b608ca8e855","parents","parent","parentElement","$1338f5f0d60fe216$export$6b974c5889da0bb5","fireCallBack","$1338f5f0d60fe216$export$863f37913038cf77","includeMargins","offsetWidth","$f745992e8d1b1180$var$support","$f745992e8d1b1180$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$f745992e8d1b1180$var$calcSupport","$33c7356d035118c5$var$deviceCached","$33c7356d035118c5$var$calcDevice","platform","ua","ios","android","screenWidth","screenHeight","ipad","ipod","iphone","windows","macos","iPadScreens","os","$33c7356d035118c5$export$30c823bc834d6ab4","overrides","$f7ea505fdac53fb2$var$browser","$1t1Wn","$f7ea505fdac53fb2$export$89e15fc796a4a429","needPerspectiveFix","isSafari","ua1","includes","num","Number","major","minor","isWebView","$f7ea505fdac53fb2$var$calcBrowser","$caa86f81f75e9730$export$2e2bcd8739ae039","param1","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$4393da3adccaa7db$export$2e2bcd8739ae039","observers","attach","options","ObserverFunc","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$26f00b4681ced12e$export$2e2bcd8739ae039","handler","priority","self","method","event","onceHandler","__emitterProxy","offAny","eventHandler","data","context","unshift","eventsArray","$gXfEI","$2effa18fdcd4ebca$export$2e2bcd8739ae039","$fdMLQ","$56ZNO","updateSlidesOffset","$hIP6N","updateSlidesProgress","$dW6z4","$5P2Nk","$1kvfj","$KG4bf","updateClickedSlide","$9VeMF","$c57e4cf0a3cc0e9b$export$2e2bcd8739ae039","clientWidth","clientHeight","parseInt","isNaN","$b14de6c650ce395b$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","key1","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesSize1","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","backFaceHiddenClass","hasClassBackfaceClassAdded","contains","maxBackfaceHiddenSlides","$3b8d73f2acfa0ea0$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","index1","offsetHeight","$ce6e30db971b8f6a$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$a255c8b825922753$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","isVisible","originalProgress","$43d3e22542fd4c38$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","$0f7fe5860e74601f$export$2e2bcd8739ae039","activeSlide","getFilteredSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","emitSlidesClasses","$08c4ed821325a44e$export$2e2bcd8739ae039","newActiveIndex","realIndex1","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$08c4ed821325a44e$export$81ecffcda7ad6ebb","skip","$543214d309191af3$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$543214d309191af3$var$unlazy","$543214d309191af3$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slidesPerViewDynamic","slideIndexLastInView","$7394e7bbbcd710e0$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1vNo4","$ff3f3346f9416381$export$2e2bcd8739ae039","getTranslate","$kCYKF","$7THKu","$dzDR0","$dVcfr","$119efefc5c17e954$export$2e2bcd8739ae039","virtualTranslate","$f0467b48c9fa9010$export$2e2bcd8739ae039","byController","x","y","$5bff9b105f3a15ca$export$2e2bcd8739ae039","$9e1d7562301634ad$export$2e2bcd8739ae039","$a22a1974ce4a087e$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","_obj","onTranslateToWrapperTransitionEnd","$kR0Vg","$3bfe96c57afe6ca0$export$2e2bcd8739ae039","transitionStart","$488q8","transitionEnd","$99Zle","$f2e9791e5099a2fd$export$2e2bcd8739ae039","transitionDuration","$4aOW6","$301e70f0ee5514cd$export$2e2bcd8739ae039","step","$309f9b76d4fd47ea$export$2e2bcd8739ae039","$6ab48978240ea54a$export$2e2bcd8739ae039","$OZIeq","$d7398976190fd90b$export$2e2bcd8739ae039","slideToLoop","$cGTS6","$7Y909","slidePrev","$3B7dt","slideReset","$dhKLJ","slideToClosest","$fn7l8","$hk5na","$09948a6d2dc2571f$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$93d4bf3a931cd83e$export$2e2bcd8739ae039","indexAsNumber","newIndex","$5cd51e7a21111153$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$29ea6cd54fa440bc$export$2e2bcd8739ae039","normalize","val","prevSnapIndex","normalizedSnapGrid","prevSnap","prevIndex","lastIndex","$9ac1243abd623ac0$export$2e2bcd8739ae039","$b30eb28584e91039$export$2e2bcd8739ae039","threshold","currentSnap","nextSnap","currentSnap1","$c9c878d368de6346$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$3Gh7G","$7ea6f47a36945eb6$export$2e2bcd8739ae039","$7AnfI","$5gsL1","$2ae2939469a141d4$export$2e2bcd8739ae039","slideRealIndex","$585deea5b955cef7$export$2e2bcd8739ae039","_slideTo","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","swiperLoopMoveDOM","prepend","recalcSlides","currentSlideTranslate","newSlideTranslate","currentSlideTranslate1","newSlideTranslate1","diff1","controller","control","loopParams","c","$3d54c101ba970f47$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$3mSh2","$012177cdd3ce0659$export$2e2bcd8739ae039","$aozqy","$273d86d6596c268d$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$7917a06587c5c882$export$2e2bcd8739ae039","$f9d4708c1dfbfc0b$var$dummyEventAttached","$f9d4708c1dfbfc0b$var$dummyEventListener","$f9d4708c1dfbfc0b$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$kXZZT","onLoad","$f9d4708c1dfbfc0b$export$2e2bcd8739ae039","$97DRT","$ex2Z8","$1OTa3","$19FtL","$35dR0","$1jcRQ","$6a43b17d59f348c6$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","__closestFrom","assignedSlot","found","getRootNode","$6a43b17d59f348c6$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$02baf1653270db8e$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","pow","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","loopFixed","isLoop","evt","bubbles","dispatchEvent","disableParentSwiper","resistanceRatio","resistance","followFinger","$15353fd53fa0afb1$export$2e2bcd8739ae039","type","currentPos","touchEndTime","timeDiff","pathTree","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","increment1","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","prevEl","$f43968ae768025a8$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$23ec95d99b99a94a$export$2e2bcd8739ae039","stopImmediatePropagation","$0d76ce9bb77be3f2$export$2e2bcd8739ae039","$0f418bff419545b4$export$2e2bcd8739ae039","$bGu4B","$ff999bdc5ea561ff$export$2e2bcd8739ae039","getBreakpoint","$7ogML","$881af1db6e44c2b5$var$isGridEnabled","$881af1db6e44c2b5$export$2e2bcd8739ae039","breakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","$5617cb898a0f8fe0$export$2e2bcd8739ae039","base","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","_i","point1","value1","$g0Bml","$73a2aa00ea89ae97$export$2e2bcd8739ae039","$8Ubu7","$ba79a0353521e453$export$2e2bcd8739ae039","_classNames","prefix","resultClasses","suffixes","autoheight","centered","item","$67bc7655f50fd7fe$export$2e2bcd8739ae039","$c71e4cd26750bb38$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$69cbdaf801d551aa$export$2e2bcd8739ae039","uniqueNavElements","passiveListeners","$4902d140bb7ee8d5$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$f468fb17181f9684$export$2e2bcd8739ae039","checkProps","$73166865f7b54cd7$export$2e2bcd8739ae039","$f4c91b3b7f316ab7$export$2e2bcd8739ae039","appendElement","tempDOM","$2813cfd83c41305e$export$2e2bcd8739ae039","prependElement","$18636735d4558718$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$716dd64e8af94877$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$09cd9ab98ba19d8c$export$2e2bcd8739ae039","removeSlide","$972bb72b4792baa3$export$2e2bcd8739ae039","requireUpdateOnVirtual","overwriteParams","perspective","recreateShadows","getEffectParams","overwriteParamsResult","_s","slideShadows","$a3fe64242580cf29$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$32bf8419d687a016$export$2e2bcd8739ae039","transformElements","allSlides","eventTriggered","parentNode","getSlide","elementTransitionEnd","$aa588c71d5569b8d$export$2e2bcd8739ae039","shadowClass","shadowContainer","savedTheme","$4b360ea48ce96d8f$var$checkBoxEl","$4b360ea48ce96d8f$var$body","$4b360ea48ce96d8f$var$STORAGE_KEY","$4b360ea48ce96d8f$var$theme","themeValue","currentTarget","checked","localStorage","setItem","getItem","register","JSON","parse"],"version":3,"file":"index.32e77777.js.map"}